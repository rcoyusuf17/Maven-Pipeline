pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository from Git
                git branch: 'main', url: 'https://github.com/rcoyusuf17/Maven-Pipeline.git'
            }
        }

        stage('Maven Version') {
            steps {
                // Run Maven version
                sh 'mvn --version'
            }
        }

        stage('Maven Validate') {
            steps {
                // Run Maven validate
                sh 'mvn -f maven-samples/single-module/pom.xml validate'
            }
        }

        stage('Maven Test') {
            steps {
                // Run Maven tests
                sh 'mvn -f maven-samples/single-module/pom.xml test'
            }
        }

        stage('Maven Build') {
            steps {
                // Run Maven package
                sh '''
                    mvn -f maven-samples/single-module/pom.xml package
                    pwd
                    mv maven-samples/single-module/target/single-module-project.jar single-module-project.jar
                '''
            }
        }

        stage('Commit and Push Jar to Git') {
            steps {
                // Use credentials to push the JAR file to Git
                withCredentials([usernamePassword(credentialsId: 'your-credential-id', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                    sh '''
                        git config --global user.email "rico.yusuf@truslogic.co.id"
                        git config --global user.name "rcoyusuf17"
                        git add single-module-project.jar
                        git commit -m "Add JAR file" || echo "No changes to commit"
                        git push https://$GIT_USERNAME:$GIT_PASSWORD@github.com/rcoyusuf17/Maven-Pipeline.git main
                    '''
                }
            }
        }

        stage('Maven Clean') {
            steps {
                // Clean the project
                sh 'mvn -f maven-samples/single-module/pom.xml clean'
            }
        }
    }

    post {
        always {
            // Clean workspace after build
            cleanWs()
        }
    }
}
